name: CI/CD Deploy to Render

on:
  push:
    branches-ignore:
      - master  # Push vào nhánh khác master → chạy CI
  pull_request:
    branches:
      - master  # Khi mở PR vào master → chạy CI + sonar
  workflow_run:
    workflows: ["CI/CD Deploy to Render"]
    types:
      - completed  # Chạy sau khi workflow kia chạy xong (cho merge vào master)

jobs:
  build-and-test:
    if: github.event_name != 'workflow_run'  # Tránh chạy lại sau khi merge
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Clean
        run: |
          rm -rf emnhanvien/obj/ emnhanvien/bin/
          rm -rf emnhanvien.Tests/obj/ emnhanvien.Tests/bin/

      - name: Restore and Build
        run: |
          dotnet restore emnhanvien/emnhanvien.sln
          dotnet restore emnhanvien.Tests/emnhanvien.Tests.csproj
          dotnet build emnhanvien/emnhanvien.sln --no-restore --configuration Release

      - name: Run tests
        run: |
          cd emnhanvien.Tests
          dotnet test --configuration Release --verbosity normal --logger "console;verbosity=detailed"

  sonar-analysis:
    if: github.event_name == 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add dotnet tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd emnhanvien
          dotnet sonarscanner begin /k:"vuthang692005_emnhanvien" /o:"vuthang692005" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet restore
          dotnet build --no-restore
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  deploy:
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
